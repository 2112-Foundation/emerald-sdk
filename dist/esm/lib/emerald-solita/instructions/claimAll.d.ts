/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
/**
 * @category Instructions
 * @category ClaimAll
 * @category generated
 */
export declare type ClaimAllInstructionArgs = {
    communityIdx: number;
    communityAccount: number;
    firstNftPdaIdx: number;
    collectionTicketMatchVec: beet.bignum[];
    collectionIdxVec: beet.bignum[];
    policyTicketMatchVec: beet.bignum[];
    policyIdxVec: beet.bignum[];
};
/**
 * @category Instructions
 * @category ClaimAll
 * @category generated
 */
export declare const claimAllStruct: beet.FixableBeetArgsStruct<ClaimAllInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _claimAll_ instruction
 *
 * @property [_writable_, **signer**] user
 * @property [_writable_] mainPool
 * @property [_writable_] communityPool
 * @property [_writable_] userAccount
 * @property [_writable_] userCommunityAccount
 * @property [_writable_] rewardVault
 * @property [_writable_] userRewardAccount
 * @category Instructions
 * @category ClaimAll
 * @category generated
 */
export declare type ClaimAllInstructionAccounts = {
    user: web3.PublicKey;
    mainPool: web3.PublicKey;
    communityPool: web3.PublicKey;
    userAccount: web3.PublicKey;
    userCommunityAccount: web3.PublicKey;
    rewardVault: web3.PublicKey;
    userRewardAccount: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const claimAllInstructionDiscriminator: number[];
/**
 * Creates a _ClaimAll_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ClaimAll
 * @category generated
 */
export declare function createClaimAllInstruction(accounts: ClaimAllInstructionAccounts, args: ClaimAllInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
