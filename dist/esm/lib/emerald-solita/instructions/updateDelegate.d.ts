/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as web3 from '@solana/web3.js';
import * as beet from '@metaplex-foundation/beet';
/**
 * @category Instructions
 * @category UpdateDelegate
 * @category generated
 */
export declare type UpdateDelegateInstructionArgs = {
    delegate: web3.PublicKey;
};
/**
 * @category Instructions
 * @category UpdateDelegate
 * @category generated
 */
export declare const updateDelegateStruct: beet.BeetArgsStruct<UpdateDelegateInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _updateDelegate_ instruction
 *
 * @property [_writable_, **signer**] user
 * @property [_writable_] mainPool
 * @property [_writable_] userAccount
 * @property [_writable_] delegatePda
 * @category Instructions
 * @category UpdateDelegate
 * @category generated
 */
export declare type UpdateDelegateInstructionAccounts = {
    user: web3.PublicKey;
    mainPool: web3.PublicKey;
    userAccount: web3.PublicKey;
    delegatePda: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    rent?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const updateDelegateInstructionDiscriminator: number[];
/**
 * Creates a _UpdateDelegate_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateDelegate
 * @category generated
 */
export declare function createUpdateDelegateInstruction(accounts: UpdateDelegateInstructionAccounts, args: UpdateDelegateInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
